# ================================
# Nom de l'application et port de la gateway
# ================================
spring.application.name=gateway-service
server.port=8888

# ================================
# Configuration Eureka
# ================================
eureka.client.service-url.defaultZone=${DISCOVERY_SERVICE_URL:http://localhost:8761/eureka}
eureka.instance.prefer-ip-address=true
spring.cloud.discovery.enabled=true
spring.cloud.config.enabled=false
# ================================
# Configuration CORS au niveau de la gateway
# ================================
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:63342
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true

# ================================
# Routes pour Client, Restaurant et Livreur
# ================================

# Route pour le service client
spring.cloud.gateway.routes[0].id=client-service
spring.cloud.gateway.routes[0].uri=lb://CLIENT-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/client/**

# Route pour le service restaurant
spring.cloud.gateway.routes[1].id=restaurant-service
spring.cloud.gateway.routes[1].uri=lb://RESTAURANT-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/restaurant/**

# Route pour le service livreur (DeliveryPerson)
spring.cloud.gateway.routes[2].id=delivery-service
spring.cloud.gateway.routes[2].uri=lb://DELIVERY-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/delivery/**
